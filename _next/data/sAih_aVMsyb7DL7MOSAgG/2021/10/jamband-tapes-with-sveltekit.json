{"pageProps":{"post":{"title":"SvelteKit を使って jamband/tapes を作った","date":"2021-10-16","tags":["github","svelte","sveltekit"],"year":"2021","month":"10","slug":"jamband-tapes-with-sveltekit","content":"<h2>はじめに</h2>\n<p><a href=\"https://jamband.github.io/tapes/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">jamband/tapes</a> をリリースした。この記事では jamband/tapes の技術的なことについて書いていく。</p>\n<h2>環境</h2>\n<ul>\n<li>Host: GitHub Pages</li>\n<li>Framework: SvelteKit Beta</li>\n<li>CSS: TailwindCSS</li>\n</ul>\n<h2>jamband/tapes とは何か</h2>\n<p>GitHub Pages 上で動作する SvelteKit を使った Jamstack 構成の音楽サイト。</p>\n<p>自分は趣味で <a href=\"https://plusarchive.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PlusArchive</a> というサイトを持っていて、トップページに表示される Recent favorite tracks というものがある。これはだいたい月 1 で更新しているものだが、過去のものはアーカイブとして残らないので、ちょっともったいないなぁと思い、そのアーカイブを「テープ」と名付けた jamband/tapes を作った。</p>\n<p>jamband というのは自分の GitHub のアカウント名であり、このブログも GitHub Pages 上で動作していて名前が jamband/blog なので、それに合わせた名前になる。</p>\n<h2>更新頻度とコンテンツの量について</h2>\n<p>Jamstack 構成で気になるのはまず更新頻度とコンテンツの量。更新頻度については基本月 1 なので問題はなく、月 1 で 1 つのテープが作られ、おおよそ 6 つ程度のそのテープに関連するトラックが追加される。</p>\n<p>テープとトラックはそれぞれユニークなページを持っているので、コンテンツの量としては月 7 ページずつ増加する。1 年だと 84 ページになり、10 年だと 840 ページになる。20 年だと 1680 ページになる。</p>\n<h2>採用したフレームワークについて</h2>\n<p>安定の Next.js さんでもいいわけだが (Incremental Static Regeneration もあるし)、最近自分は SvelteKit をよく触っていたので、それを採用した。また、データについては外部 CMS を使わず JSON 形式のファイルを同レポジトリに持つ構成になっている。</p>\n<p>懸念点としては Node.js によるファイル操作でデータを引っ張ってくるので、例えばコンテンツが増えてページネーションを実装したいなぁってときに自分でいろいろ書かなくちゃいけなかったり、コンテンツの量がどのくらい増えたらファイル操作のパフォーマンスに影響するのかを深くは把握していないので、若干の不安はあるが、ファイル操作自体は読み込みのみだけだし、コンテンツの量も急に想定外に増加することはないので、見せ方をちょっと工夫すればなんとかなるだろうと思っている。</p>\n<h2>JSON 形式によるデータ (テープ) の生成について</h2>\n<p>JSON 形式によるテープのデータは PlusArchive の <a href=\"https://github.com/jamband/api.plusarchive.com/blob/main/commands/TapeController.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">バックエンドのコマンド</a> で自動生成する。生成された JSON 形式のファイルを jamband/tapes の特定のディレクトリに置き、若干の目視を加えながら修正をする (言語によっては slug の生成が完璧ではないため) 。</p>\n<p>結果として半自動になるわけだが、そこは潔く諦めつつ、少しずつ改善していく。</p>\n<h2>現状の SvelteKit について</h2>\n<p>SvelteKit は 2021 年 10 月現在まだ Beta であり、安定版に向けて着実に進んではいるものの、やはりまだ安定はしていない。わりと致命的なバグがあったり、アップデートしたら壊れたってこともたまにある。もちろん Beta なので Breaking Change も発生するし、<a href=\"https://vitejs.dev/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vite</a> 関連の問題も多そうで大変そうではあるが、「使える箇所で使ってみつつ様子を見る」程度には使えるのでガンガン使っていきたい。</p>\n<p>問題や変更箇所は <a href=\"https://github.com/sveltejs/kit/issues\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Issues</a> であったり、<a href=\"https://github.com/sveltejs/kit#packages\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">各パッケージの ChangeLog</a> であったりで確認できる。</p>\n<h2>テストについて</h2>\n<p>Svelte/SvelteKit のコンポーネントのテストは <a href=\"https://jestjs.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jest</a> + <a href=\"https://github.com/mihar-22/svelte-jester\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">svelte-jester</a> + <a href=\"https://github.com/testing-library/svelte-testing-library\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Svelte Testing Library</a> の組み合わせで書くのが良いと思われるが、現状まだ slot のテストができないみたいで (<a href=\"https://github.com/testing-library/svelte-testing-library/issues/48#issuecomment-707338500\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ハックすればできなくもない</a>) 、絶望して書くのをやめた。ここはもう少し様子を見ようと思う。</p>\n<h2>まとめ</h2>\n<p>この記事ではコードを 1 つも書いてないが、以下の関連リンクで jamband/tapes のコードを確認できるので、気になる人はどうぞ (fetch 部分にバグがあって変なハックをしていたりするがそのうち修正されると思われる) 。</p>\n<h2>関連リンク</h2>\n<ul>\n<li><a href=\"https://kit.svelte.dev/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SvelteKit</a></li>\n<li><a href=\"https://jamband.github.io/tapes/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">jamband/tapes</a></li>\n<li><a href=\"https://github.com/jamband/tapes/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub: jamband/tapes</a></li>\n</ul>\n"}},"__N_SSG":true}