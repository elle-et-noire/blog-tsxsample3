{"pageProps":{"post":{"title":"Laravel as an API backend でのプロジェクトの構成について少しだけ考えてみる","date":"2021-02-15","tags":["laravel"],"year":"2021","month":"02","slug":"structure-of-the-project-with-laravel-as-an-api-backend","content":"<h2>はじめに</h2>\n<p>Laravel で Backend な API を作る機会があったので、ついでにプロジェクトの構成についても「少しだけ」 考えてみた。</p>\n<p>あまりやり過ぎると初学者には難しすぎるし、何もやらなければすぐ破綻する。プロジェクトと採用するフレームワークの特徴を掴んで、良い感じの落とし所を探っていく。</p>\n<h2>環境</h2>\n<ul>\n<li>PHP 7.4.x</li>\n<li>Laravel 8.x</li>\n</ul>\n<h2>ディレクトリ構成</h2>\n<p>GitHub にサンプルを用意したので、それを参考にしてほしい。</p>\n<p><a href=\"https://github.com/jamband/api.cameloz\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub: jamband/api.cameloz</a></p>\n<p>とりあえずはまず Laravel が提供しているアプリケーションのディレクトリ構成にできる限り従い、「その中でやれることをやる」という形でいく。それでも何か難しい問題が発生した場合は、その時に考え、その時に対応する。</p>\n<h2>ルーティング</h2>\n<p>まずは API の入り口であるルーター周り。ここではほぼほぼ何もやらない。各種ミドルウェアなどの割り当てもここではやらない。</p>\n<div class=\"remark-highlight\"><pre data-file=\"app/Providers/RouteServiceProvider.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">declare</span><span class=\"token punctuation\">(</span>strict_types<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Providers</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Support<span class=\"token punctuation\">\\</span>Providers<span class=\"token punctuation\">\\</span>RouteServiceProvider</span> <span class=\"token keyword\">as</span> ServiceProvider<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Support<span class=\"token punctuation\">\\</span>Facades<span class=\"token punctuation\">\\</span>Route</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">RouteServiceProvider</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ServiceProvider</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">boot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">createGroups</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n                <span class=\"token string single-quoted-string\">'projects'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string single-quoted-string\">'tasks'</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string single-quoted-string\">'task_priorities'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">createGroups</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-hint\">array</span> <span class=\"token variable\">$groups</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$groups</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$group</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">prefix</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$group</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span>\n                <span class=\"token function\">base_path</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'routes/'</span><span class=\"token operator\">.</span><span class=\"token variable\">$group</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'.php'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>グループ事にファイルを分ける。それだけやっておく。こうすることによってエンドポイントが増えていってもある程度までは対応できる。</p>\n<p>以下は projects グループのルート:</p>\n<div class=\"remark-highlight\"><pre data-file=\"routes/projects.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">declare</span><span class=\"token punctuation\">(</span>strict_types<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> App\\Http\\Controllers\\Project\\<span class=\"token punctuation\">{</span>\n    CreateProject<span class=\"token punctuation\">,</span>\n    DeleteProject<span class=\"token punctuation\">,</span>\n    GetProject<span class=\"token punctuation\">,</span>\n    GetProjects<span class=\"token punctuation\">,</span>\n    UpdateProject<span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Support<span class=\"token punctuation\">\\</span>Facades<span class=\"token punctuation\">\\</span>Route</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">pattern</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'project'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'[\\d]+'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token scope\">GetProjects<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'{project}'</span><span class=\"token punctuation\">,</span> <span class=\"token scope\">GetProject<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token scope\">CreateProject<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'{project}'</span><span class=\"token punctuation\">,</span> <span class=\"token scope\">UpdateProject<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'{project}'</span><span class=\"token punctuation\">,</span> <span class=\"token scope\">DeleteProject<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>良い感じにコントローラに繋げるために、シングルアクションコントローラを使うようにする。定義元のコントローラにジャンプすれば、そこには一つのエンドポイントの処理のみが書いてある。他のアクションのことは一旦忘れる。目の前のアクションに集中する。という構成。</p>\n<h2>ミドルウェア</h2>\n<p>グローバルなミドルウェアなどは以下で構成する:</p>\n<div class=\"remark-highlight\"><pre data-file=\"app/Http/Kernel.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">declare</span><span class=\"token punctuation\">(</span>strict_types<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>PreventRequestsDuringMaintenance</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>TrimStrings</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>TrustHosts</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>TrustProxies</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Fruitcake<span class=\"token punctuation\">\\</span>Cors<span class=\"token punctuation\">\\</span>HandleCors</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Kernel</span> <span class=\"token keyword\">as</span> HttpKernel<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>ConvertEmptyStringsToNull</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>ValidatePostSize</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>SubstituteBindings</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Kernel</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpKernel</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$middleware</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token scope\">ConvertEmptyStringsToNull<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n        <span class=\"token scope\">HandleCors<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n        <span class=\"token scope\">PreventRequestsDuringMaintenance<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n        <span class=\"token scope\">TrimStrings<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n        <span class=\"token scope\">TrustHosts<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n        <span class=\"token scope\">TrustProxies<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n        <span class=\"token scope\">ValidatePostSize<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$routeMiddleware</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'bindings'</span> <span class=\"token operator\">=></span> <span class=\"token scope\">SubstituteBindings<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$middlewarePriority</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token scope\">SubstituteBindings<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>$routeMiddleware は本当は短縮キーを使用せずにコントローラに直接書きたかったが (定義元にジャンプできるので)、オプション等が必要なミドルウェアを割り当てる場合に上手く書くことができなかったため諦めた。</p>\n<h2>コントローラ</h2>\n<p>コントローラの構成は以下:</p>\n<ul>\n<li>ベースのコントローラ</li>\n<li>ベースのコントローラを継承したグループのコントローラ</li>\n<li>グループのコントローラを継承したシングルアクションコントローラ</li>\n</ul>\n<p>この 3 段階構成でいく。ベースのコントローラとグループのコントローラには極力何も書かない。まずはシングルアクションコントローラに具体的な処理を書くようにし、どうしても必要な場合にグループのコントローラに書く。それでも問題がある場合にベースのコントローラに書く。という構成。</p>\n<p>こうすることによってどのエンドポイントでどのようなミドルウェアが割当たっているかなどの見通しが良くなる。</p>\n<p>以下はこの 3 段階構成の例:</p>\n<div class=\"remark-highlight\"><pre data-file=\"app/Http/Controllers/Controller.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">declare</span><span class=\"token punctuation\">(</span>strict_types<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Controllers</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>Controller</span> <span class=\"token keyword\">as</span> BaseController<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Controller</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseController</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre data-file=\"app/Http/Controllers/Project/Controller.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">declare</span><span class=\"token punctuation\">(</span>strict_types<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Controllers<span class=\"token punctuation\">\\</span>Project</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Controllers<span class=\"token punctuation\">\\</span>Controller</span> <span class=\"token keyword\">as</span> BaseController<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Controller</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseController</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token scope\"><span class=\"token keyword\">parent</span><span class=\"token punctuation\">::</span></span><span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre data-file=\"app/Http/Controllers/Project/DeleteProject.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">declare</span><span class=\"token punctuation\">(</span>strict_types<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Controllers<span class=\"token punctuation\">\\</span>Project</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Models<span class=\"token punctuation\">\\</span>Project</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Response</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">DeleteProject</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Controller</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token scope\"><span class=\"token keyword\">parent</span><span class=\"token punctuation\">::</span></span><span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">middleware</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n            <span class=\"token string single-quoted-string\">'bindings'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Project</span> <span class=\"token variable\">$project</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">Response</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$project</span><span class=\"token operator\">-></span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token function\">response</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">noContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>例はシンプルだが、実際には認可処理であったり、あーだこーだいろいろなものが入りこんでくるので、そういった場合にいかに見通しがよくなるように構成していくかというのが重要かなと思う。</p>\n<h2>認可とバリデーション</h2>\n<p>コントローラを小さく保つために <a href=\"https://laravel.com/docs/8.x/validation#form-request-validation\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Form Request Validation</a> を使う。一つのアクションに対して一つの Form Request を持つようにする。共通の Form Request などは却って複雑に成りかねないので持たせない。</p>\n<h2>テスト</h2>\n<p>プロジェクトが Backend な API であること、また Laravel では HTTP テストがとても書きやすく軽いということ (Laravel 8.25.x 以降ではテストの並列実行も可能になった)、などの特徴を踏まえて、API の出口である HTTP テストを充実させるという方向でいく。</p>\n<p>このような経緯に至った理由としては、とにかくForm Request のテストが非常に書きにくく、ある時点になると負債になりかねないと感じたから。</p>\n<p>また、API リソースなども単体ではテストは書かず、HTTP テストで補う。ただ、モデルなどのテストはちゃんと書く。そういう構成にした。</p>\n<h2>まとめ</h2>\n<p>とりあえずこのような構成で始めてみる。いずれ問題が発生するかもしれないが、何か難しい問題が発生しつつある場合は、その時に考え、その時に対応する。そのために小さな準備を開発初期の段階でやっておく。</p>\n<h2>参考リンク</h2>\n<ul>\n<li><a href=\"https://qiita.com/nunulk/items/5297cce4545ac3c16822\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Laravel で Request, UseCase, Resource を使いコントロールフローをシンプルにする - Qiita</a></li>\n<li><a href=\"https://zenn.dev/mpyw/articles/ce7d09eb6d8117\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">5年間 Laravel を使って辿り着いた，全然頑張らない「なんちゃってクリーンアーキテクチャ」という落としどころ</a></li>\n</ul>\n<h2>関連リンク</h2>\n<ul>\n<li><a href=\"https://github.com/jamband/api.cameloz\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub: jamband/api.cameloz</a></li>\n</ul>\n"}},"__N_SSG":true}