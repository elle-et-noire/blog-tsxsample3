{"pageProps":{"post":{"title":"Laravel でクッキーベースのセッション認証を使った Web API を実装する","date":"2022-01-25","tags":["authentication","laravel","next"],"year":"2022","month":"01","slug":"web-api-with-cookie-based-session-authentication-in-laravel","content":"<h2>はじめに</h2>\n<p>Laravel をバックエンドの Web API として利用し、クッキーベースのセッション認証を使って認証関連のさまざまなアクションを実装していく。</p>\n<h2>環境</h2>\n<ul>\n<li>PHP 8.0.x</li>\n<li>Laravel 8.x</li>\n<li>Google Chrome 97.x</li>\n</ul>\n<p>また、バックエンド (Laravel) とフロントエンド (Next.js) でアプリケーションが分かれているため、以下のようなオリジンを想定している。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">- in development environment -\nBackend origin: http://localhost:8000\nFrontend origin: http://localhost:3000\n\n- in production environment -\nBackend origin: https://api.example.com\nFrontend origin: https://www.example.com</code></pre></div>\n<h2>前提知識</h2>\n<p>この記事では開発環境、本番環境ともにいわゆるクロスオリジンな通信が発生し、またクッキーベースのセッション認証を利用しているため、前提として以下の知識が必要になる。</p>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/Security/Same-origin_policy\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">同一オリジンポリシー</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/HTTP/CORS\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">オリジン間リソース共有 (CORS)</a></li>\n<li><a href=\"https://web.dev/same-site-same-origin/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Understanding \"same-site\" and \"same-origin\"</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/HTTP/Cookies\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTP Cookie の使用</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/Set-Cookie\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Set-Cookie</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/Set-Cookie/SameSite\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SameSite cookies</a></li>\n</ul>\n<p>上記の中でも CORS はやや複雑なのだが、クロスオリジンな通信が発生するアプリケーションを扱う場合には必要不可欠なものなので、何度も読み返し、実際に検証を繰り返しつつ、覚えていくしかない。</p>\n<p>また Cookie も同様に各 Web ブラウザによって Set-Cookie ヘッダーの属性のデフォルト値に差異があったり、特定の環境下で異なる動作をしたり、セキュリティ関連のみに収まらず最近ではプライバシー関連での問題があったりと、わりと扱いにくくなってきたものの、これもまた各 Web ブラウザの動向を追いつつ、対応状況を把握しつつ、柔軟に対応していく他ない。</p>\n<h2>デモアプリケーション</h2>\n<p>今回の記事を書くにあたって、以下の 2 つのデモアプリケーションを作成した。</p>\n<ul>\n<li><a href=\"https://github.com/jamband/api.papers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">jamband/api.papers</a></li>\n<li><a href=\"https://github.com/jamband/papers-next\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">jamband/papers-next</a></li>\n</ul>\n<p>Papers 自体はログインして自分しか見れないメモを残すだけの簡単なアプリケーションで、api.papers は Laravel を利用したバックエンド Web API、papers-next は Next.js を使ったフロントエンド側のアプリケーションになる。認証関連のアクションでメールを送信するなどの処理が発生するので、どこかにホスティングはせず、現状ローカル環境でのみ動作確認ができる。興味のある人は実際動かしたり、コードの読んでみたりしてほしい。</p>\n<p>では、デモは一旦置いといて、実装の詳細について見ていく。</p>\n<h2>Laravel 側での準備</h2>\n<p>バックエンドのアプリケーションで必要になるのは以下:</p>\n<ul>\n<li><a href=\"https://github.com/laravel/framework\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">laravel/framework</a></li>\n<li><a href=\"https://github.com/fruitcake/laravel-cors\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">fruitcake/laravel-cors</a></li>\n</ul>\n<p>最初は <a href=\"https://github.com/laravel/sanctum\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Laravel Sanctum</a> も使っていたのだが、今回の環境ではいらないと思い途中で使うのをやめた。また認証関連の実装は基本的に <a href=\"https://github.com/laravel/breeze/tree/master/stubs/api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Laravel Breeze の api</a> を参考にしている。ただ Laravel Breeze はスターターキット的なものなので Composer でインストールとかはせず、あくまで中身のコードを参考にしている程度。</p>\n<h2>CORS の設定</h2>\n<p>開発時を想定して再度オリジンを確認する。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">- in development environment -\nBackend origin: http://localhost:8000 (with Laravel)\nFrontend origin: http://localhost:3000 (with Next.js)</code></pre></div>\n<p>今回の場合はポート (8000 と 3000) が違うため、Web ブラウザがクロスオリジンであると判定する。これは <a href=\"https://developer.mozilla.org/ja/docs/Web/API/XMLHttpRequest\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">XMLHttpRequest</a> や <a href=\"https://developer.mozilla.org/ja/docs/Web/API/Fetch_API/Using_Fetch\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Fetch API</a> を介してフロントエンド側がバックエンド側と通信を行おうとした場合に Web ブラウザが自動的に判定する。</p>\n<p>さらにこの通信時に Web ブラウザはバックエンド側に対して「Origin」という HTTP ヘッダーを含める。これも Web ブラウザが自動的に行う。なので、バックエンド側ではこの Origin の値を最初に検証し、その後で諸々の設定を行う。</p>\n<p>まず許可する Origin を HTTP の Access-Control-Allow-Origin ヘッダーを使って明示する。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">Access-Control-Allow-Origin: http://localhost:3000</code></pre></div>\n<p>Laravel で <a href=\"https://github.com/fruitcake/laravel-cors\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">fruitcake/laravel-cors</a> を使っている場合は以下のようになる (環境変数名はわかりやすければなんでもいい):</p>\n<div class=\"remark-highlight\"><pre data-file=\".env\" class=\"language-shell\"><code class=\"language-shell\"><span class=\"token assign-left variable\">FRONTEND_ORIGIN</span><span class=\"token operator\">=</span>http://localhost:3000\n</code></pre></div>\n<div class=\"remark-highlight\"><pre data-file=\"config/cors.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'paths'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'*'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'allowed_origins'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'FRONTEND_ORIGIN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// add</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>本番環境では FRONTEND_ORIGIN という環境変数をどこかしらで設定する必要がある:</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">FRONTEND_ORIGIN=https://www.example.com</code></pre></div>\n<p>allowed_origins の値は配列になっていて複数指定できるが、これは以下のようなことをやっているわけではないので注意:</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">Access-Control-Allow-Origin: http://localhost:3000,http://localhost:3001</code></pre></div>\n<p>allowed_origins はあくまで許可するオリジンのリストであって、Web ブラウザから送られてくる Origin ヘッダーの値を見て、許可するオリジンリストにマッチするものがあればレスポンスとして以下のようなヘッダーを含める、ということをやっている:</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">Access-Control-Allow-Origin: http://localhost:3000\n\nもしくは\nAccess-Control-Allow-Origin: http://localhost:3001</code></pre></div>\n<p>Access-Control-Allow-Origin ヘッダーにはオリジンの複数指定はできない。また * (アスタリスク) も指定できるが、今回のようなセッション認証の場合、クッキーを扱うことになり * (アスタリスク) を指定した場合に Web ブラウザがエラーを返すので使えない。というより * (アスタリスク) はあらゆるすべてのオリジンからのアクセスを許可する値なので基本的には使ってはいけない (null も同様)。</p>\n<p>次は Access-Control-Allow-Methods ヘッダーの値を明示する。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">Access-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS,PATCH</code></pre></div>\n<p>これはフロントエンド側がバックエンド側にアクセスする際に使う HTTP のリクエストメソッドを指定する。これはカンマ区切りで複数指定できる。Access-Control-Allow-Origin ヘッダーと同様に値として * (アスタリスク) を指定できるが、条件によっては意味のない * というメソッドとして扱われたりするので、必ず HTTP のリクエストメソッドを明示すること。</p>\n<p>laravel-cors を使っている場合は以下:</p>\n<div class=\"remark-highlight\"><pre data-file=\"config/cors.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'paths'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'*'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'allowed_origins'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'FRONTEND_ORIGIN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'allowed_methods'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'PUT'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'DELETE'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'OPTIONS'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'PATCH'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// add</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>allowed_methods では配列で指定することになる。注意としては allowed_methods で POST を許可した場合、フロントエンド側は PUT 及び DELETE も許可されることなる。これは動作としてはややこしいが Laravel が依存している Symfony の特定のコンポーネントがそういう動作をするので仕方ない。自分はそれでもフロントエンド側が使うすべての HTTP リクエストメソッドを明示的に指定する。その方がわかりやすいので。</p>\n<p>また、この記事では PUT, DELETE, PATCH などの HTTP リクエストメソッドを使っているが、そもそも RESTful ではない、いわゆる外部に公開することはない特定のアプリケーションに対して閉じられた Web API を作成する場合は、PUT, DELETE, PATCH などは使わず、GET, POST のみでも全然かまわない。ただどちらかに統一はするべき。</p>\n<p>さて、この Access-Control-Allow-Methods ヘッダーはフロントエンド側が <a href=\"https://developer.mozilla.org/ja/docs/Web/API/XMLHttpRequest\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">XMLHttpRequest</a> や <a href=\"https://developer.mozilla.org/ja/docs/Web/API/Fetch_API/Using_Fetch\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Fetch API</a> を介してバックエンド側にアクセスしようとした際に Web ブラウザが自動的に生成する Access-Control-Request-Method ヘッダーに対してのレスポンスヘッダーであることに注意する。そしてこの Access-Control-Allow-Methods は特定のリクエストの際に使われるものであって、すべてのリクエストに対して無条件で返されるものではない、ということをとりあえず覚えておく。</p>\n<p>次は Access-Control-Allow-Headers ヘッダーの値を明示する。これはフロントエンド側がバックエンド側にアクセスする際に使う HTTP ヘッダー一覧を指定する。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">Access-Control-Allow-Headers: Accept,Content-Type,X-XSRF-TOKEN</code></pre></div>\n<p>上記以外のヘッダーが含まれたアクセスがあった場合 Web ブラウザはエラーを返し、バックエンド側との通信はその時点で遮断される。</p>\n<p>laravel-cors を使っている場合は以下:</p>\n<div class=\"remark-highlight\"><pre data-file=\"config/cors.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'paths'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'*'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'allowed_origins'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'FRONTEND_ORIGIN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'allowed_methods'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'PUT'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'DELETE'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'OPTIONS'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'PATCH'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'allowed_headers'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Accept'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'Origin'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'X-XSRF-TOKEN'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// add</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>生の Access-Control-Allow-Headers ヘッダーとの違いは Origin ヘッダーも指定しているところ。これは <a href=\"https://github.com/fruitcake/laravel-cors#configuration\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">laravel-cors</a> の README に書いてあるのでとりあえず付け足しておく。また、Accept と Content-Type ヘッダーは常に許可されているヘッダーなので明示する必要はないのだが、ヘッダーの値によっては許可されたりされなかったりするというあいまいな条件があるため、すべて明示したほうが無難。X-XSRF-TOKEN ヘッダーは CSRF 対策として使われる Laravel 特有のヘッダーでフロントエンド側からバックエンド側に <a href=\"https://developer.mozilla.org/ja/docs/Web/API/XMLHttpRequest\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">XMLHttpRequest</a> や <a href=\"https://developer.mozilla.org/ja/docs/Web/API/Fetch_API/Using_Fetch\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Fetch API</a> を介して POST リクエストをする際などに必要になってくる。</p>\n<p>また、この Access-Control-Allow-Headers ヘッダーでも * (アスタリスク) を指定できるが、他のヘッダーと同様に使うことはできるが、できるかぎり使わないこと。</p>\n<p>あと、Access-Control-Allow-Headers も Access-Control-Allow-Methods と同様に Access-Control-Request-Headers を含むリクエストの際のレスポンスヘッダーであり、特定のリクエストの際に使われるものであって、すべてのリクエストに対して無条件で返されるものではない。</p>\n<p>次に Access-Control-Allow-Credentials ヘッダーの値を明示する。今回はクッキーベースのセッション認証を利用しているため true という値を明示する必要がある。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">Access-Control-Allow-Credentials: true</code></pre></div>\n<p>laravel-cors を使っている場合は以下:</p>\n<div class=\"remark-highlight\"><pre data-file=\"config/cors.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'paths'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'*'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'allowed_origins'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'FRONTEND_ORIGIN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'allowed_methods'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'PUT'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'DELETE'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'OPTIONS'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'PATCH'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'allowed_headers'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Accept'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'Origin'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'X-XSRF-TOKEN'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'supports_credentials'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// add</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<h2>Laravel が生成する Set-Cookie ヘッダーの確認</h2>\n<p>Laravel でクッキーベースのセッション認証を安全に行う場合、必要となるミドルウェアがいくつかある。</p>\n<ul>\n<li><a href=\"https://laravel.com/api/8.x/Illuminate/Cookie/Middleware/EncryptCookies.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">EncryptCookies</a></li>\n<li><a href=\"https://laravel.com/api/8.x/Illuminate/Cookie/Middleware/AddQueuedCookiesToResponse.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AddQueuedCookiesToResponse</a></li>\n<li><a href=\"https://laravel.com/api/8.x/Illuminate/Session/Middleware/StartSession.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">StartSession</a></li>\n<li><a href=\"https://laravel.com/api/8.x/Illuminate/Session/Middleware/AuthenticateSession.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AuthenticateSession</a></li>\n<li><a href=\"https://laravel.com/api/8.x/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VerifyCsrfToken</a></li>\n</ul>\n<p>上記の中の StartSession と VerifyCsrfToken ミドルウェアが独自の Set-Cookie ヘッダーを生成し、これがフロントエンド側でも重要なものになってくるので詳しく説明していく。</p>\n<p>CORS の設定をした状態で、StartSession ミドルウェアが割り当てられている場合、バックエンドの Web アプリケーションがどのようなレスポンスを返すのか確認してみる。</p>\n<div class=\"remark-highlight\"><pre data-file=\"config/cors.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'paths'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'*'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'allowed_origins'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'FRONTEND_ORIGIN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'allowed_methods'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'PUT'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'DELETE'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'OPTIONS'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'PATCH'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'allowed_headers'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Accept'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'Origin'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'X-XSRF-TOKEN'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string single-quoted-string\">'supports_credentials'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre data-file=\"app/Http/Kernel.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>EncryptCookies</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Fruitcake<span class=\"token punctuation\">\\</span>Cors<span class=\"token punctuation\">\\</span>HandleCors</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Cookie<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>AddQueuedCookiesToResponse</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Session<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>StartSession</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Kernel</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpKernel</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$middleware</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token scope\">HandleCors<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$middlewareGroups</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'web'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n            <span class=\"token scope\">EncryptCookies<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n            <span class=\"token scope\">AddQueuedCookiesToResponse<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n            <span class=\"token scope\">StartSession<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// add</span>\n            <span class=\"token comment\">// ...</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre data-file=\"app/Providers/RouteServiceProvider.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Providers</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Support<span class=\"token punctuation\">\\</span>Providers<span class=\"token punctuation\">\\</span>RouteServiceProvider</span> <span class=\"token keyword\">as</span> ServiceProvider<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Request</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Support<span class=\"token punctuation\">\\</span>Facades<span class=\"token punctuation\">\\</span>Route</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">RouteServiceProvider</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ServiceProvider</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">boot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">middleware</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'web'</span><span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">-></span><span class=\"token function\">namespace</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">namespace</span><span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">-></span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token function\">base_path</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'routes/web.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre data-file=\"routes/web.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Support<span class=\"token punctuation\">\\</span>Facades<span class=\"token punctuation\">\\</span>Route</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/foo'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">response</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'message'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'hello'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>バックエンド側の Web API を起動 (in development environment):</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">php artisan serve</code></pre></div>\n<p>簡単なフロントエンド側のスクリプトを書く:</p>\n<div class=\"remark-highlight\"><pre data-file=\"/path/to/frontend/index.html\" class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8000/foo\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">Accept</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">credentials</span><span class=\"token operator\">:</span> <span class=\"token string\">\"include\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">content</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>フロントエンド側のアプリケーションを PHP のビルトインウェブサーバで起動 (in development environment):</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">cd /path/to/frontend\nphp -S localhost:3000 -t .</code></pre></div>\n<p>Web ブラウザで <a href=\"http://localhost:3000\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://localhost:3000</a> にアクセスし、Developer Tools の Console 画面で正常にレスポンスが返ってきてるかを確認する。</p>\n<p>ここからは Web ブラウザの Developer Tools による細かな説明になる。この記事では Google Chrome (英語版) を使って進めていく。</p>\n<p>Developer Tools の Application タブを選択し Storage 項目の Cookies を展開して <a href=\"http://localhost:3000\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://localhost:3000</a> を選択する。すると現状 <a href=\"http://localhost:3000\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://localhost:3000</a> に保存してあるクッキーの一覧が表示されるので、存在する場合はすべて削除しておく (右クリックして Clear で削除できる)。その状態で Network タブに移動しブラウザをリロードする。ブラウザが読み込んだファイル一覧が表示されると思うので、その中から foo を選択する。タブがさらにいくつか表示されると思うので、その中から Headers を選択する。ここでリクエストヘッダーとレスポンスヘッダーの詳細が見れる。</p>\n<p>まずリクエストヘッダーから見ていく。この foo はフロントエンド側の index.html ファイル内の fetch() メソッドを使いバックエンド側に GET リクエストした際に Web ブラウザが自動的に生成するリクエストヘッダー。いろいろな種類のヘッダーがあるが、その中でも注目すべきは「Origin」ヘッダー。このヘッダーは「クロスオリジンなリクエストの際は必ず Web ブラウザが自動生成する」。</p>\n<p>続いてレスポンスヘッダー。フロントエンド側から fetch() メソッドを使ってバックエンド側にリクエストがあった場合に、バックエンド側が Web ブラウザに返すヘッダーであり、ここでもいろいろな種類のヘッダーが表示されていると思うが、その中でも注目すべきは Access-Control-* と Set-Cookie の 2 つ。Access-Control-* はバックエンド側で CORS の設定時に指定した値が表示されているはず。ただ、Access-Control-Allow-Methods と Access-Control-Allow-Headers ヘッダーは存在しない。なぜかは後で説明する。</p>\n<p>Set-Cookie には xxx_session という名前のクッキーが存在する。これはセッション情報をやりとりするときに使われるもの。Laravel の StartSession ミドルウェアが /foo ルートに割り当てられている場合に自動的に生成される。</p>\n<p>Set-Cookie の属性についても見ていく:</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">Set-Cookie: xxx_session=eyJpdiI...; expires=...; Max-Age=7200; path=/; httponly; samesite=lax</code></pre></div>\n<p>Expires 属性はクッキーの有効期限。Laravel を使っている場合は config/session.php の lifetime で調整することができる。</p>\n<p>Max-Age 属性はクッキーの期限切れまでの秒数。Laravel を使っている場合は Session の lifetime が秒数に変換され設定される。Expires と Max-Age 属性が両方設定されている場合、Max-Age が優先される。</p>\n<p>Domain 属性はクッキーの送信先のドメインを指定する。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">...; Domain=example.com; ...</code></pre></div>\n<p>そして上記のような指定がされていた場合、サブドメイン (例えば foo.example.com, bar.example.com) にもクッキーが送信される。また、Domain 属性が省略された場合はクッキーを発行したドメインにのみクッキーが送信され、サブドメインには送信されなくなる。</p>\n<p>Laravel を使っている場合は config/session.php の domain で設定する:</p>\n<div class=\"remark-highlight\"><pre data-file=\"config/session.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string single-quoted-string\">'domain'</span> <span class=\"token operator\">=></span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'SESSION_DOMAIN'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これは変更せず、そのままにしておく。.env にも SESSION_DOMAIN はなく、つまりデフォルトでは Domain 属性は省略される。この記事では開発環境時のバックエンド/フロントエンドともに localhost という同じホストを使っているため結果的にクッキーは送信されるようになっている。ただ本番環境ではどこかしらに Domain 属性を指定した環境変数を用意しておく必要がある。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">SESSION_DOMAIN=example.com</code></pre></div>\n<p>Secure 属性は HTTPS プロトコルで通信が行われた場合にのみクッキーを送信する。なので本番環境は必ず付ける。開発環境ではやっかいなので自分は省略している。</p>\n<p>Laravel を使っている場合は config/session.php で設定する。</p>\n<div class=\"remark-highlight\"><pre data-file=\".env\" class=\"language-shell\"><code class=\"language-shell\"><span class=\"token assign-left variable\">SESSION_SECURE_COOKIE</span><span class=\"token operator\">=</span>false\n</code></pre></div>\n<div class=\"remark-highlight\"><pre data-file=\"config/session.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string single-quoted-string\">'secure'</span> <span class=\"token operator\">=></span> <span class=\"token function\">env</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'SESSION_SECURE_COOKIE'</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>これで結果的に本番環境では SESSION_SECURE_COOKIE という環境変数を用意しなくても Secure 属性が付く。</p>\n<p>また、Secure 属性については Web ブラウザによって挙動が違うみたいで、開発環境時にスキームが http:// であろうと https:// であろうと 「localhost」 というホストを使っている場合、現時点の最新の Google Chrome, Firefox では Secure 属性が付いていたとしても、本来送信されないであろうクッキーが送信されるようになっている。ただ Safari (バージョン 15.2 現在) では送信されないようになっている (こういう挙動は混乱を招く)。</p>\n<p>このような理由から開発環境では自分は Secure 属性を付けず、上記のような設定にし、本番環境では自動で付くような感じにしている。</p>\n<p>HttpOnly 属性は JavaScript からクッキーにアクセスさせないようにする属性。XSS 攻撃を軽減することができるので認証関連を扱うクッキーには必ず付けておく。</p>\n<p>Laravel では config/session.php で設定する。</p>\n<div class=\"remark-highlight\"><pre data-file=\"config/session.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string single-quoted-string\">'http_only'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>デフォルトでは上記のようになっているはず。このままにしておく。</p>\n<p>最後に SameSite 属性。Web ブラウザで A というサイトにアクセスしたとする。A サイトはレスポンスの一部としてクッキーを発行したとする。Web ブラウザは A サイトから発行されたクッキーを Web ブラウザ内に保存する。で、再度同じ Web ブラウザを使って A サイトにアクセスしたとする。その際 Web ブラウザは過去に保存した A サイトから発行されたクッキーを Cookie リクエストヘッダーを用いて「自動的に」 A サイトに送信する。</p>\n<p>この仕組みのおかげで何か再度手続きをしなくてもログイン状態を維持できたりするわけだが、この「Web ブラウザが Cookie リクエストヘッダーを用いて自動的に送信するクッキー」というのは悪用される恐れがあるため、その送信先を「限定する」というのが SameSite 属性で指定できる。</p>\n<p>値としては Strict, Lax, None のいずれかを用いる。</p>\n<p>Laravel では config/session.php で設定する。</p>\n<div class=\"remark-highlight\"><pre data-file=\"config/session.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token string single-quoted-string\">'same_site'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'lax'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>デフォルトは Lax なのでこの記事ではそのままを使う。他のフレームワークでもおそらくここ数年のアップデートでデフォルト値が Lax に設定されていると思われる。クッキーを扱う場合わりと重要な値なのでしっかり確認しておく。</p>\n<p>また、この SameSite 属性は省略でき、その場合は Web ブラウザのデフォルト値が採用されるわけだが、各 Web ブラウザによって値が違ったりするので、できる限り明示したほうがいい。</p>\n<p>Strict, Lax, None の値の違いについては細かな部分で検証しきれていないためここでは省略する。とりあえず MDN の <a href=\"https://developer.mozilla.org/ja/docs/Web/HTTP/Headers/Set-Cookie\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Set-Cookie</a> とかを読みつつ検証する他ない。おそらくだいたいのアプリケーションは Lax で問題ないと思うが、いろんな歴史を持った、いろんなアプリケーションがあるので、その中で適切だと思う値を指定する。</p>\n<p>続いて Laravel のもう一つのミドルウェアである <a href=\"https://laravel.com/api/8.x/Illuminate/Foundation/Http/Middleware/VerifyCsrfToken.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VerifyCsrfToken</a> を見ていく。</p>\n<div class=\"remark-highlight\"><pre data-file=\"app/Http/Kernel.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>EncryptCookies</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>VerifyCsrfToken</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// add</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Fruitcake<span class=\"token punctuation\">\\</span>Cors<span class=\"token punctuation\">\\</span>HandleCors</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Cookie<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>AddQueuedCookiesToResponse</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Session<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>StartSession</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Kernel</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpKernel</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$middleware</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token scope\">HandleCors<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$middlewareGroups</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'web'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n            <span class=\"token scope\">EncryptCookies<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n            <span class=\"token scope\">AddQueuedCookiesToResponse<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n            <span class=\"token scope\">StartSession<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n            <span class=\"token scope\">VerifyCsrfToken<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// add</span>\n            <span class=\"token comment\">// ...</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>Web ブラウザで <a href=\"http://localhost:3000\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://localhost:3000</a> のクッキーを削除して、再度 <a href=\"http://localhost:3000\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://localhost:3000</a> にアクセスし、Network タブから foo を選択し、リクエスト/レスポンスヘッダーを確認する。</p>\n<p>xxx_session の他に XSRF-TOKEN というものがあるかと思う。これは VerifyCsrfToken が /foo ルートに割り当てられている場合に Laravel が自動的に生成するもの。CSRF 対策の一つとして利用される。ちなみに XSRF-TOKEN クッキーはフロントエンド側にて JavaScript で取得し加工した後にバックエンド側に送信する POST リクエスト等に含める必要があるため HttpOnly 属性は持っていない。</p>\n<p>最後にフロントエンド側からバックエンドの /foo ルートに対して GET リクエストし、その後に /bar ルートに対して POST リクエストしてみる。</p>\n<div class=\"remark-highlight\"><pre data-file=\"routes/web.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Request</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Support<span class=\"token punctuation\">\\</span>Facades<span class=\"token punctuation\">\\</span>Route</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/foo'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'message'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'hello'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/bar'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">fn</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Request</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'message'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$request</span><span class=\"token operator\">-></span><span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'message'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'hello'</span> <span class=\"token operator\">?</span> <span class=\"token string single-quoted-string\">'hello from backend.'</span> <span class=\"token punctuation\">:</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre data-file=\"/path/to/frontend/index.html\" class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8000/foo\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">Accept</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">credentials</span><span class=\"token operator\">:</span> <span class=\"token string\">\"include\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span><span class=\"token property-access\">ok</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> cookies <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">cookie</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"; \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> cookie <span class=\"token operator\">=</span> cookies<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> _<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"XSRF-TOKEN\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> csrfToken <span class=\"token operator\">=</span> <span class=\"token function\">decodeURIComponent</span><span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8000/bar\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">Accept</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string-property property\">\"Content-Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string-property property\">\"X-XSRF-TOKEN\"</span><span class=\"token operator\">:</span> csrfToken<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">credentials</span><span class=\"token operator\">:</span> <span class=\"token string\">\"include\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">\"hello\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">content</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>Web ブラウザに保存されているクッキーを削除し、再度 <a href=\"http://localhost:3000\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://localhost:3000</a> にアクセスする。</p>\n<p>Console タブを選択すると以下のレスポンスボディが返ってきているかと思う:</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">{</span>message: <span class=\"token string\">'hello from backend.'</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>注目すべきところはまず Network タブ。foo は 1 つだが、bar は 2 つ表示されているはず。これは Web ブラウザがバックエンド側の /bar に対して 2 回リクエストしたことを示す。フロントエンド側のコードでは /bar に対してのリクエストは 1 回しかしていないはずなのに。</p>\n<p>Status が 204 の bar を選択しリクエスト/レスポンスヘッダーを見てみる。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">- Request Headers -\nAccess-Control-Request-Headers: content-type,x-xsrf-token\nAccess-Control-Request-Method: POST\nOrigin: http://localhost:3000\n...\n\n- Response Headers -\nAccess-Control-Allow-Credentials: true\nAccess-Control-Allow-Headers: accept, content-type, origin, x-xsrf-token\nAccess-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS, PATCH\nAccess-Control-Allow-Origin: http://localhost:3000\nAccess-Control-Max-Age: 0\n...</code></pre></div>\n<p>これは何が発生したかというと、フロントエンド側がバックエンド側の /bar ルートに対してリクエストしようとした内容が複雑であると Web ブラウザが判断し、実際のリクエストをする前に、いくつかのリクエストヘッダーを使って Web ブラウザがバックエンドに対して安全なリクエストであるかを確認している。</p>\n<p>これは Web ブラウザが自動的に行う。今回の例ではリクエストヘッダーの Content-Type が application/json であること、また、X-XSRF-TOKEN というリクエストヘッダーが存在すること、が発生要因として挙げられる。</p>\n<p>ちなみにこのリクエストをプリフライトリクエストと呼ぶ。Options メソッドで送信され、安全であると判断されれば HTTP のレスポンスとして通常 204 が返ってくる。バックエンド側が許可していないリクエストヘッダーなどが使われていた場合、Web ブラウザがエラーを吐き通信はその時点で遮断される。</p>\n<p>プリフライトリクエストが発生する条件はやや複雑なのでここでは省略する。<a href=\"https://developer.mozilla.org/ja/docs/Web/HTTP/CORS#%E5%8D%98%E7%B4%94%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CORS 単純リクエスト</a> などが参考になる。</p>\n<h2>ログインアクションの実装</h2>\n<p>では、実際にログインアクションを実装してみる。ルートとしては以下 の 3 つを作成する:</p>\n<ol>\n<li>GET /csrf-cookie</li>\n<li>POST /login</li>\n<li>GET /user</li>\n</ol>\n<p>1 は CSRF 対策用のトークンを生成するアクション、2 はログインアクション、3 はログイン済みのユーザの名前を返すアクション。</p>\n<p>Composer の create-project などで Laravel のプロジェクトが作成されていて、データベースの設定、マイグレーションの実行などが完了していると仮定して話を進めていく。また、試験用として以下の値を持ったユーザを 1 件追加しておく (password は Hash ファサードの make メソッドなどを使いハッシュ化する)。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">name: foo\nemail: foo@example.com\npassword: foofoofoo</code></pre></div>\n<p>まずはルーティング (本当はコントローラを用意したり、ログインの処理ももう少しちゃんとする必要がある):</p>\n<div class=\"remark-highlight\"><pre data-file=\"routes/web.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Support<span class=\"token punctuation\">\\</span>Facades<span class=\"token punctuation\">\\</span>Route</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Request</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Support<span class=\"token punctuation\">\\</span>Facades<span class=\"token punctuation\">\\</span>Auth</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/csrf-cookie'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token function\">response</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">noContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/login'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Request</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token scope\">Auth<span class=\"token punctuation\">::</span></span><span class=\"token function\">attempt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$request</span><span class=\"token operator\">-></span><span class=\"token function\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$request</span><span class=\"token operator\">-></span><span class=\"token function\">session</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">regenerate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">response</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">noContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">response</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'message'</span> <span class=\"token operator\">=></span> <span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'auth.failed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">422</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">middleware</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'guest'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/user'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">fn</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Request</span> <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$request</span><span class=\"token operator\">-></span><span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">middleware</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'auth'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<div class=\"remark-highlight\"><pre data-file=\"app/Providers/RouteServiceProvider.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Support<span class=\"token punctuation\">\\</span>Providers<span class=\"token punctuation\">\\</span>RouteServiceProvider</span> <span class=\"token keyword\">as</span> ServiceProvider<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Support<span class=\"token punctuation\">\\</span>Facades<span class=\"token punctuation\">\\</span>Route</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">RouteServiceProvider</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ServiceProvider</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">boot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">routes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n            <span class=\"token scope\">Route<span class=\"token punctuation\">::</span></span><span class=\"token function\">middleware</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'web'</span><span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">-></span><span class=\"token function\">namespace</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">namespace</span><span class=\"token punctuation\">)</span>\n                <span class=\"token operator\">-></span><span class=\"token function\">group</span><span class=\"token punctuation\">(</span><span class=\"token function\">base_path</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'routes/web.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>ミドルウェアは以下:</p>\n<div class=\"remark-highlight\"><pre data-file=\"app/Http/Kernel.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>Authenticate</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>EncryptCookies</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>RedirectIfAuthenticated</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>VerifyCsrfToken</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Fruitcake<span class=\"token punctuation\">\\</span>Cors<span class=\"token punctuation\">\\</span>HandleCors</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Cookie<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>AddQueuedCookiesToResponse</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Http<span class=\"token punctuation\">\\</span>Kernel</span> <span class=\"token keyword\">as</span> HttpKernel<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Session<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>AuthenticateSession</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Session<span class=\"token punctuation\">\\</span>Middleware<span class=\"token punctuation\">\\</span>StartSession</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Kernel</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">HttpKernel</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$middleware</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token scope\">HandleCors<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$middlewareGroups</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'web'</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>\n            <span class=\"token scope\">EncryptCookies<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n            <span class=\"token scope\">AddQueuedCookiesToResponse<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n            <span class=\"token scope\">StartSession<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n            <span class=\"token scope\">AuthenticateSession<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n            <span class=\"token scope\">VerifyCsrfToken<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$routeMiddleware</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string single-quoted-string\">'auth'</span> <span class=\"token operator\">=></span> <span class=\"token scope\">Authenticate<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string single-quoted-string\">'guest'</span> <span class=\"token operator\">=></span> <span class=\"token scope\">RedirectIfAuthenticated<span class=\"token punctuation\">::</span></span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>フロントエンド側:</p>\n<div class=\"remark-highlight\"><pre data-file=\"/path/to/frontend/index.html\" class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n  <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8000/csrf-cookie\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">Accept</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">credentials</span><span class=\"token operator\">:</span> <span class=\"token string\">\"include\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span><span class=\"token property-access\">ok</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> cookies <span class=\"token operator\">=</span> <span class=\"token dom variable\">document</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">cookie</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"; \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> cookie <span class=\"token operator\">=</span> cookies<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> _<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">startsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"XSRF-TOKEN\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> csrfToken <span class=\"token operator\">=</span> <span class=\"token function\">decodeURIComponent</span><span class=\"token punctuation\">(</span>cookie<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8000/login\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">Accept</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string-property property\">\"Content-Type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string-property property\">\"X-XSRF-TOKEN\"</span><span class=\"token operator\">:</span> csrfToken<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">credentials</span><span class=\"token operator\">:</span> <span class=\"token string\">\"include\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">stringify</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> <span class=\"token string\">\"foo@example.com\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">password</span><span class=\"token operator\">:</span> <span class=\"token string\">\"foofoofoo\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span><span class=\"token property-access\">ok</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8000/user\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token literal-property property\">Accept</span><span class=\"token operator\">:</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">credentials</span><span class=\"token operator\">:</span> <span class=\"token string\">\"include\"</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">content</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>script</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>/csrf-token に GET リクエストするといくつかのクッキーが Web ブラウザに保存される。それを取得した後 CSRF 対策用のクッキーとログインに必要な body を含めて /login に POST リクエストする。最後に /user に GET リクエストする。結果として Web ブラウザの Console 画面に以下が表示される。</p>\n<div class=\"remark-highlight\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">{</span>name:<span class=\"token string\">'foo'</span><span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>以上がおおまかではあるが、ログインの実装であり、ログインしたユーザの情報を取得する実装である。重要なのは、クッキーがいつどのように生成されて、どのような属性を持ち、どのように扱われているか。Web ブラウザや CORS の性質とともにそれらを理解していないと認証関連のアクションを実装するのはわりとおっかない。</p>\n<h2>テストを書く</h2>\n<p>/csrf-token は body を持たないただの GET リクエストだが、ヘッダーには他のリクエストと同様に重要なクッキーの値がセットされている。そのためテストを書いて想定通りの値が返ってくるかを保証しておく。</p>\n<p>というのも Laravel の重要なクッキーを送信するいくつかのミドルウェアは config/session.php に書かれている値に依存している。そのため、もし何かしらの原因でそれらの値が書き換えられた場合、想定外の何かが発生する恐れがある。</p>\n<div class=\"remark-highlight\"><pre data-file=\"tests/Features/CsrfCookieTest.php\" class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">namespace</span> <span class=\"token package\">Tests<span class=\"token punctuation\">\\</span>Feature</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">Carbon<span class=\"token punctuation\">\\</span>Carbon</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Tests<span class=\"token punctuation\">\\</span>TestCase</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CsrfCookieTest</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">TestCase</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">testAccessControlHeaders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">getJson</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/csrf-cookie'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">-></span><span class=\"token function\">assertHeader</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'access-control-allow-origin'</span><span class=\"token punctuation\">,</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">app</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'config'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'app.cors_origins'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">-></span><span class=\"token function\">assertHeader</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'access-control-allow-credentials'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'true'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">testCsrfCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">getJson</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/csrf-cookie'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$setCookie</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$response</span><span class=\"token operator\">-></span><span class=\"token property\">headers</span><span class=\"token operator\">-></span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'set-cookie'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertCount</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$setCookie</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">[</span><span class=\"token variable\">$token</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$setCookie</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$tokenValues</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'; '</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$token</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertCount</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$tokenValues</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertMatchesRegularExpression</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/\\AXSRF-TOKEN=eyJpdiI.+\\z/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$token</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertContains</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'expires='</span><span class=\"token operator\">.</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">expires</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$tokenValues</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertContains</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Max-Age=7200'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$tokenValues</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertContains</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'path=/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$tokenValues</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertContains</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'samesite=lax'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$tokenValues</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">testSessionCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">getJson</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/csrf-cookie'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$setCookie</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$response</span><span class=\"token operator\">-></span><span class=\"token property\">headers</span><span class=\"token operator\">-></span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'set-cookie'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertCount</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$setCookie</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$session</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$setCookie</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$sessionValues</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'; '</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$session</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertCount</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sessionValues</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertMatchesRegularExpression</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string single-quoted-string\">'/\\A'</span><span class=\"token operator\">.</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token function\">strtolower</span><span class=\"token punctuation\">(</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">app</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'config'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'app.name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'_session=eyJpdiI.+\\z/'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token variable\">$session</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertContains</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'expires='</span><span class=\"token operator\">.</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">expires</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sessionValues</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertContains</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Max-Age=7200'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sessionValues</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertContains</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'path=/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sessionValues</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertContains</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'httponly'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sessionValues</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assertContains</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'samesite=lax'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sessionValues</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">testContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">void</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">getJson</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/csrf-cookie'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">-></span><span class=\"token function\">assertNoContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">expires</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword return-type\">string</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Carbon</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">-></span><span class=\"token function\">addMinutes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">int</span><span class=\"token punctuation\">)</span><span class=\"token this keyword\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">app</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'config'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'session.lifetime'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">-></span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'D, d-M-Y H:i:s'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">' GMT'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>どこまで細かく書くかは微妙なところだが、重要だと思う箇所はしっかりテストに書いて残しておく。</p>\n<h2>Fetch API について</h2>\n<p>フロントエンド側で扱う fetch() メソッドについてもいくつか確認しておく。詳しくは <a href=\"https://developer.mozilla.org/ja/docs/Web/API/Fetch_API/Using_Fetch\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Fetch の使用</a> で確認できる。</p>\n<p>オプションについて:</p>\n<ul>\n<li>mode のデフォルト値は cors である</li>\n<li>credentials のデフォルト値は same-origin である</li>\n</ul>\n<p>であるからして、今回のような環境 (クロスオリジンな環境) では mode は省略できる。credentials は include と明示する必要がある。</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8000/foo\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// mode: \"cors\",</span>\n  <span class=\"token literal-property property\">credentials</span><span class=\"token operator\">:</span> <span class=\"token string\">\"include\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>また、<a href=\"https://github.com/axios/axios\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">axios</a> などは Laravel が CSRF 対策として送信する XSRF-TOKEN クッキーを自動的に X-XSRF-TOKEN ヘッダーに設定する。fetch() メソッドでは手動でやらないといけない。</p>\n<p>エラー処理について。fetch() も axios も非同期で処理が行われるが fetch() は通信障害 (バックエンド側のサーバがダウンしているなど) 以外はプロミスを拒否しない。</p>\n<div class=\"remark-highlight\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// コメントの数値は HTTP のレスポンスのステータスコード</span>\n<span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:8000/foo\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token property-access\">ok</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true: 200 - 299 の範囲内, false: true の範囲外</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span><span class=\"token property-access\">status</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token comment\">// 200 - 599 の範囲内</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// サーバがダウンしたときなど</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\naxios<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/foo\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 200 - 299 の範囲内</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token keyword control-flow\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 200 - 299 の範囲外</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>どちらがどうとかはなんとも言えないが、このように扱うライブラリによっていろいろな差異があるのでコードを書く際は注意する。</p>\n<h2>その他のアクションについて</h2>\n<p>その他の認証関連のアクションについては <a href=\"https://github.com/jamband/api.papers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub jamband/api.papers</a> (バックエンド) や <a href=\"https://github.com/jamband/papers-next\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub jamband/papers-next</a> (フロントエンド) などを参考にしてほしい。</p>\n<p>また、<a href=\"https://github.com/laravel/breeze/tree/master/stubs/api\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Laravel Breeze の api</a> (バックエンド) や <a href=\"https://github.com/laravel/breeze-next\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Laravel Breeze Next.js Edition</a> (フロントエンド) なども参考になる (Laravel Breeze の api は Laravel Sanctum を使っているので注意)。</p>\n<h2>まとめ</h2>\n<p>重要なことなので再度書くが、今回は以下のような環境を想定して、クッキーベースのセッション認証について説明した。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">- in development environment -\nBackend origin: http://localhost:8000\nFrontend origin: http://localhost:3000\n\n- in production environment -\nBackend origin: https://api.example.com\nFrontend origin: https://www.example.com</code></pre></div>\n<p>上記はつまり開発/本番環境ともに「cross-origin でありながら schemeful same-site」である。その中で Web ブラウザがどのような挙動をし、フロントエンド/バックエンド側ではどのような実装が必要になるのかを示した。</p>\n<p>ただ Web アプリケーションの構成はこれだけではない。以下のような same-origin な構成になる場合もあるし、トークンベースの認証を採用するかもしれない。</p>\n<div class=\"remark-highlight\"><pre class=\"language-unknown\"><code class=\"language-unknown\">- in development environment -\nBackend origin: http://localhost:8000/api\nFrontend origin: http://localhost:8000\n\n- in production environment -\nBackend origin: https://example.com/api\nFrontend origin: https://example.com</code></pre></div>\n<p>そして、どのような構成になったとしても認証関連の実装は難しいのだが、IE 11 の終末を目の前にして、この記事を書きながら、Web ブラウザについてさらにより意識を向けないといけないなぁと、改めて思った。</p>\n<h2>関連リンク</h2>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/HTTP/Cookies\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTP Cookie の使用</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/HTTP/CORS\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">オリジン間リソース共有 (CORS)</a></li>\n<li><a href=\"https://developer.mozilla.org/ja/docs/Web/API/Fetch_API/Using_Fetch\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Fetch の使用</a></li>\n<li><a href=\"https://web.dev/fetch-metadata/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Protect your resources from web attacks with Fetch Metadata</a></li>\n<li><a href=\"https://github.com/laravel/breeze\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Laravel Breeze</a></li>\n<li><a href=\"https://github.com/laravel/sanctum\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Laravel Sanctum</a></li>\n<li><a href=\"https://github.com/jamband/api.papers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">jamband/api.papers</a></li>\n<li><a href=\"https://github.com/jamband/papers-next\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">jamband/papers-next</a></li>\n</ul>\n<h2>備考</h2>\n<p>この記事ではセッション情報をバックエンド側にてファイルで管理している。これは Laravel のデフォルトの設定である。アプリケーションが複数の Web サーバで構成されている場合などはその他のセッションドライバーを検討する必要があるので注意する。</p>\n"}},"__N_SSG":true}